
далее:
	+ продолжать ли добавления в игру - например локализацию.

	.если данный интерфейс либо класс наследуеться от нескольких других интерфейсов в которых есть один и тот-же метод:
		.что позволяет зделать синтаксис языка?
		.как сказать что-бы одна и та-же реализация метода использовалась для всех базовых интерфейсов.

	.вопросы:
		как связана картинка графа с кодом?
		
		зачем рисовать граф перед написанием кода?
		
		какую идею организации кода я протаскиваю?
	
		с наличием scope-ов Autofaca как поменялся подход к разработке кода?

	.что стало понятно из переделки под Autofaca?

Яну:

.дописать тесты:
	.в тестах подделку для IGameDataService котоая:
		.даст фиксированные данные на старте.
		.через которую можно проверить сохраняемые на диск данные.

	+ их поисправлять.


.провести ревизию классов:
	.т.е. есть GameLoader и Builder - насколько у них разные ответственности?
	.может есть ещё что-то такое пересекающееся/лишнее.


.https://autofac.org/ - разобрать как использовать модули:
	.заменить IoCBuilder.Building()
	.в интеграционных тестах добавить Autofac.



.на потом (отложили):
	.перечитать про SOLID и методы из TDD (подделка, триангуляция, очевидная реализация).
